<?xml version="1.0"?>
<doc>
    <assembly>
        <name>iVertion.WebApi</name>
    </assembly>
    <members>
        <member name="T:iVertion.WebApi.Controllers.AccountController">
            <summary>
            
            </summary>
        </member>
        <member name="T:iVertion.WebApi.Controllers.DeviceController">
            <summary>
            User device controller.
            </summary>
        </member>
        <member name="M:iVertion.WebApi.Controllers.DeviceController.#ctor(iVertion.Application.Interfaces.IDeviceService,iVertion.Domain.Account.IUserInterface{iVertion.Infra.Data.Identity.ApplicationUser})">
            <summary>
            Users device builder.
            </summary>
            <param name="deviceService"></param>
            <param name="userService"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:iVertion.WebApi.Controllers.DeviceController.GetMyDevicesAsync(iVertion.Domain.FiltersDb.DeviceFilterDb)">
            <summary>
            Returns all devices of the logged in user.
            </summary>
            <param name="deviceFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.DeviceController.AddMyDevice(iVertion.Application.DTOs.DeviceDTO)">
            <summary>
            Creates a device for the logged in user.
            </summary>
            <param name="deviceDto"></param>
            <returns></returns>
        </member>
        <member name="T:iVertion.WebApi.Controllers.PersonController">
            <summary>
            
            </summary>
        </member>
        <member name="M:iVertion.WebApi.Controllers.PersonController.#ctor(iVertion.Application.Interfaces.IPersonService,iVertion.Domain.Account.IUserInterface{iVertion.Infra.Data.Identity.ApplicationUser})">
            <summary>
            Retuns persons information
            </summary>
            <param name="personService"></param>
            <param name="userService"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:iVertion.WebApi.Controllers.PersonController.GetPersonsAsync(iVertion.Domain.FiltersDb.PersonFilterDb)">
            <summary>
            Retuns person information
            </summary>
            <param name="personFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.PersonController.GetPersonByIdAsync(System.Int32)">
            <summary>
            Retuns person information by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.PersonController.GetMyPersonInformationAsync">
            <summary>
            Retuns person information by id
            </summary>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.PersonController.AddPersonAsync(iVertion.Application.DTOs.PersonDTO)">
            <summary>
            Create person information by PersonDTO
            </summary>
            <param name="personDto"></param>
            <returns></returns>
        </member>
        <member name="T:iVertion.WebApi.Controllers.TokenController">
            <summary>
            Token
            </summary>
        </member>
        <member name="M:iVertion.WebApi.Controllers.TokenController.#ctor(iVertion.Domain.Account.IAuthenticate,Microsoft.Extensions.Configuration.IConfiguration,iVertion.Domain.Account.IUserInterface{iVertion.Infra.Data.Identity.ApplicationUser},iVertion.Application.Interfaces.IUserProfileService,iVertion.Application.Interfaces.IRoleProfileService,iVertion.Application.Interfaces.IAdditionalUserRoleService,iVertion.Application.Interfaces.ITemporaryUserRoleService,iVertion.Application.Interfaces.IPersonService)">
            <summary>
            Contructor.
            </summary>
            <param name="authentication"></param>
            <param name="configuration"></param>
            <param name="userService"></param>
            <param name="userProfileService"></param>
            <param name="roleProfileService"></param>
            <param name="additionalUserRoleService"></param>
            <param name="temporaryUserRoleService"></param>
            <param name="personService"></param>
        </member>
        <member name="M:iVertion.WebApi.Controllers.TokenController.ValidateToken">
            <summary>
            Validate the token
            </summary>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.TokenController.Login(iVertion.WebApi.Models.LoginModel)">
            <summary>
            Returns a Bearer Token for the user from "userInfo".
            </summary>
            <param name="userInfo"></param>
            <returns></returns>
        </member>
        <member name="T:iVertion.WebApi.Controllers.UserController">
            <summary>
            User
            </summary>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.#ctor(iVertion.Domain.Account.IAuthenticate,iVertion.Domain.Account.IUserInterface{iVertion.Infra.Data.Identity.ApplicationUser},iVertion.Domain.Account.IRoleInterface{Microsoft.AspNetCore.Identity.IdentityRole},iVertion.Application.Interfaces.IUserProfileService,iVertion.Application.Interfaces.IRoleProfileService,iVertion.Application.Interfaces.IAdditionalUserRoleService,iVertion.Application.Interfaces.ITemporaryUserRoleService,iVertion.Application.Interfaces.IPersonService)">
            <summary>
            Constructor
            </summary>
            <param name="authentication"></param>
            <param name="userService"></param>
            <param name="roleService"></param>
            <param name="userProfileService"></param>
            <param name="roleProfileService"></param>
            <param name="additionalUserRoleService"></param>
            <param name="temporaryUserRoleService"></param>
            <param name="personService"></param>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.Get">
            <summary>
            Returns a list of users.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetUserByIdAsync(System.String)">
            <summary>
            Returns a user by id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetUserByIdAsync">
            <summary>
            Returns a user by id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.CreateUser(iVertion.WebApi.Models.RegisterModel)">
            <summary>
            Creates a new user from the "userInfo" properties.
            </summary>
            <param name="userInfo"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.Signup(iVertion.WebApi.Models.RegisterModel)">
            <summary>
            Creates a new user from the "userInfo" properties.
            </summary>
            <param name="userInfo"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetUserProfileAsync(iVertion.Domain.FiltersDb.UserProfileFilterDb)">
            <summary>
            Retuns user profile information
            </summary>
            <param name="userProfileFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetUserProfileByIdAsync(System.Int32)">
            <summary>
            Returns a user profile information
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetRolesProfileAsync(System.Int32)">
            <summary>
            Returns a roles of user profile by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.AddRoleToUserProfileAsync(iVertion.WebApi.Models.RoleFromUserProfileIdModel)">
            <summary>
            Adds a Role to a User Profile by User Profile Id.
            </summary>
            <param name="roleFromUserProfileIdModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.RemoveRoleFromUserProfileId(iVertion.WebApi.Models.RoleFromUserProfileIdModel)">
            <summary>
            Removes a Role from a User Profile by the Role name and the User Profile Id.
            </summary>
            <param name="roleFromUserProfileIdModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetRoleProfileAsync(iVertion.Domain.FiltersDb.RoleProfileFilterDb)">
            <summary>
            Retuns role information
            </summary>
            <param name="roleProfileFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetAdditionalUserRolesAsync(iVertion.Domain.FiltersDb.AdditionalUserRoleFilterDb)">
            <summary>
            Returns an array of additional user roles.
            </summary>
            <param name="additionalUserRoleFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetAdditionalUserRoleByIdAsync(System.Int32)">
            <summary>
            Returns an additional user role by its id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.AddAddtionalUserRoleAsync(iVertion.WebApi.Models.AdditionalUserRoleModel)">
            <summary>
            Adds an additional role to a user beyond the role profile they belong to.
            </summary>
            <param name="additionalUserRoleModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.RemoveAddtionalUserRoleAsync(iVertion.WebApi.Models.AdditionalUserRoleModel)">
            <summary>
            Remove an additional role to a user beyond the role profile they belong to.
            </summary>
            <param name="additionalUserRoleModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetTemporaryUserRolesAsync(iVertion.Domain.FiltersDb.TemporaryUserRoleFilterDb)">
            <summary>
            Returns an array of temporary user roles.
            </summary>
            <param name="temporaryUserRoleFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetTemporaryUserRoleByIdAsync(System.Int32)">
            <summary>
            Returns a temporary user role by its id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.AddTemporaryUserRoleAsync(iVertion.WebApi.Models.TemporaryUserRoleModel)">
            <summary>
            Adds a new temporary user role.
            </summary>
            <param name="temporaryUserRoleModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.UpdateTemporaryUserRoleAsync(iVertion.WebApi.Models.EditTemporaryUserRoleModel)">
            <summary>
            Updates the start and expiration dates of a temporary user role.
            </summary>
            <param name="editTemporaryUserRoleModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.RemoveTemporaryUserRoleAsync(iVertion.WebApi.Models.RemoveTemporaryUserRoleModel)">
            <summary>
            Removes a temporary role from a user.
            </summary>
            <param name="removeTemporaryUserRoleModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetRolesAsync">
            <summary>
            Returns a list of roles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetUserRolesAsync(System.String)">
            <summary>
            Returns a list of roles off some username.
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.AddUserRoleAsync(iVertion.WebApi.Models.UserProfileModel)">
            <summary>
            Creates a new user role profile
            </summary>
            <param name="userProfileModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.ResetUserPassword(iVertion.WebApi.Models.ResetPasswordModel)">
            <summary>
            Change a user's password from the "passwordModel" properties.
            </summary>
            <param name="passwordModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.ResetMyUserPassword(iVertion.WebApi.Models.ResetMyPasswordModel)">
            <summary>
            Change the authenticated user's password from the "myPasswordModel" properties.
            </summary>
            <param name="myPasswordModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.EditeUserName(iVertion.WebApi.Models.EditUserNameModel)">
            <summary>
            Changes a user's username from the "userNameModel" properties.
            </summary>
            <param name="userNameModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.EditeMyUserName(iVertion.WebApi.Models.EditMyUserNameModel)">
            <summary>
            Changes the authenticated user's username from the "myUserNameModel" properties.
            </summary>
            <param name="myUserNameModel"></param>
            <returns></returns>
        </member>
        <member name="T:iVertion.WebApi.Controllers.WeatherController">
            <summary>
            Weather controller.
            </summary>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.#ctor(iVertion.Application.Interfaces.IWeatherConditionService,iVertion.Application.Interfaces.IWeatherForecastService,iVertion.Application.Interfaces.IWeatherAlertService,iVertion.Application.Interfaces.IWeatherNotificationService,iVertion.Domain.Account.IUserInterface{iVertion.Infra.Data.Identity.ApplicationUser},iVertion.Application.Interfaces.IDeviceService,iVertion.Application.Interfaces.IPersonService,iVertion.Application.Interfaces.IPersonAddressService,iVertion.Application.Interfaces.IAddressService)">
            <summary>
            Weather builder.
            </summary>
            <param name="weatherConditionService"></param>
            <param name="weatherForecastService"></param>
            <param name="weatherAlertService"></param>
            <param name="weatherNotificationService"></param>
            <param name="userSevice"></param>
            <param name="deviceService"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.GetWeatherConditionsAsync(iVertion.Domain.FiltersDb.WeatherConditionFilterDb)">
            <summary>
            Returns the weather condition.
            </summary>
            <param name="weatherConditionFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.AddWeatherConditionsAsync(iVertion.Application.DTOs.WeatherConditionDTO)">
            <summary>
            Adds a weather condition.
            </summary>
            <param name="weatherConditionDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.UpdateWeatherConditionsAsync(iVertion.Application.DTOs.WeatherConditionDTO)">
            <summary>
            Updates a weather condition.
            </summary>
            <param name="weatherConditionDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.GetWeatherForecastsAsync(iVertion.Domain.FiltersDb.WeatherForecastFilterDb)">
            <summary>
            Returns the weather Forecast.
            </summary>
            <param name="weatherForecastFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.AddWeatherForecastsAsync(iVertion.Application.DTOs.WeatherForecastDTO)">
            <summary>
            Adds a weather Forecast.
            </summary>
            <param name="weatherForecastDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.UpdateWeatherForecastsAsync(iVertion.Application.DTOs.WeatherForecastDTO)">
            <summary>
            Updates a weather Forecast.
            </summary>
            <param name="weatherForecastDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.GetWeatherAlertsAsync(iVertion.Domain.FiltersDb.WeatherAlertFilterDb)">
            <summary>
            Returns the weather Alert.
            </summary>
            <param name="weatherAlertFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.AddWeatherAlertsAsync(iVertion.Application.DTOs.WeatherAlertDTO)">
            <summary>
            Adds a weather Alert.
            </summary>
            <param name="weatherAlertDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.UpdateWeatherAlertsAsync(iVertion.Application.DTOs.WeatherAlertDTO)">
            <summary>
            Updates a weather Alert.
            </summary>
            <param name="weatherAlertDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.GetWeatherNotificationsAsync(iVertion.Domain.FiltersDb.WeatherNotificationFilterDb)">
            <summary>
            Returns the weather Notification.
            </summary>
            <param name="weatherNotificationFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.AddWeatherNotificationsAsync(iVertion.Application.DTOs.WeatherNotificationDTO)">
            <summary>
            Adds a weather Notification.
            </summary>
            <param name="weatherNotificationDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.UpdateWeatherNotificationsAsync(iVertion.Application.DTOs.WeatherNotificationDTO)">
            <summary>
            Updates a weather Notification.
            </summary>
            <param name="weatherNotificationDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.WeatherController.UpdateMyWeatherNotificationsAsync(iVertion.Application.DTOs.WeatherNotificationDTO)">
            <summary>
            Updates the logged user's time notification.
            </summary>
            <param name="weatherNotificationDto"></param>
            <returns></returns>
        </member>
        <member name="T:iVertion.WebApi.Models.AdditionalUserRoleModel">
            <summary>
            This model is the body of users' requests for additional roles.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.AdditionalUserRoleModel.Role">
            <summary>
            A role registered in the Identity roles.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.AdditionalUserRoleModel.UserName">
            <summary>
            An existing username on Identity.
            </summary>
        </member>
        <member name="T:iVertion.WebApi.Models.AddressRegister">
            <summary>
            Address register model
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.AddressRegister.CityName">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.AddressRegister.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.AddressRegister.StateFull">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.AddressRegister.Country">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.AddressRegister.CountryFull">
            <summary>
            
            </summary>
        </member>
        <member name="T:iVertion.WebApi.Models.EditTemporaryUserRoleModel">
            <summary>
            This is the model for update a temporary user role.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.EditTemporaryUserRoleModel.Id">
            <summary>
            An integer as Id.
            </summary>
            <value></value>
        </member>
        <member name="P:iVertion.WebApi.Models.EditTemporaryUserRoleModel.StartDate">
            <summary>
            The start date of the temporary user role.
            </summary>
            <value></value>
        </member>
        <member name="P:iVertion.WebApi.Models.EditTemporaryUserRoleModel.ExpirationDate">
            <summary>
            The end date of the temporary user role.
            </summary>
            <value></value>
        </member>
        <member name="T:iVertion.WebApi.Models.RegisterModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterModel.ConfirmPassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterModel.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterModel.UserProfileId">
            <summary>
            
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterModel.PersonId">
            <summary>
            
            </summary>
        </member>
        <member name="T:iVertion.WebApi.Models.RegisterPerson">
            <summary>
            Register Person Model
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterPerson.FirstName">
            <summary>
            First Name, string, Is Required
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterPerson.LastName">
            <summary>
            Last Name, string, Is Required
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterPerson.Birthday">
            <summary>
            Birthday, Datetime, Is Required
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RegisterPerson.ProfilePicture">
            <summary>
            Profile Picture, string, Is Required
            </summary>
        </member>
        <member name="T:iVertion.WebApi.Models.RemoveTemporaryUserRoleModel">
            <summary>
            This model is the body of users' requests for temporary roles.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RemoveTemporaryUserRoleModel.Role">
            <summary>
            A role registered in the Identity roles.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.RemoveTemporaryUserRoleModel.UserName">
            <summary>
            An existing username on Identity.
            </summary>
        </member>
        <member name="T:iVertion.WebApi.Models.TemporaryUserRoleModel">
            <summary>
            This is the model for adding a new temporary user role.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.TemporaryUserRoleModel.Role">
            <summary>
            A role registered in the Identity roles.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.TemporaryUserRoleModel.UserName">
            <summary>
            An existing username on Identity.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.TemporaryUserRoleModel.StartDate">
            <summary>
            The start date of the temporary user role.
            </summary>
            <value></value>
        </member>
        <member name="P:iVertion.WebApi.Models.TemporaryUserRoleModel.ExpirationDate">
            <summary>
            The end date of the temporary user role.
            </summary>
            <value></value>
        </member>
    </members>
</doc>
